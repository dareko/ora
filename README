-- Description  : DB AWR statistics
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q AWR */
select 'WAITS/'||event_name stat_name, i.instance_name
  , round((e.time_waited_micro - b.time_waited_micro)/1000000) stat_value
  , e.total_waits - b.total_waits total_waits
from (dba_hist_system_event e join gv$instance i using (instance_number))
  left join dba_hist_system_event b using (dbid, instance_number, event_name)
where --1<>1 and
b.snap_id = &&2 and e.snap_id = &&3
and round((e.time_waited_micro - b.time_waited_micro)/1000000)>0
union all
select 'SYS/'||stat_name, i.instance_name
  , case when stat_name like '%time' or stat_name = 'CPU used by this session'
           then round((e.value - b.value)/100)
    else round(e.value - b.value)
    end stat_value
  , NULL total_waits
from (dba_hist_sysstat e join gv$instance i using (instance_number))
  left join dba_hist_sysstat b using (dbid, instance_number, stat_name)
where --1<>1 and
  (stat_name in ('DB time', 'CPU used by this session', 'concurrency wait time'
                ,'index fetch by key','parse count (hard)', 'parse count (total)'
                ,'redo size', 'user I/O wait time', 'user commits', 'user rollbacks'
                ,'DBWR undo block writes')
  or stat_name like 'consistent gets%' or stat_name like 'db block%'
  or stat_name like 'gc cr block%' or stat_name like 'gc current block%'
  or stat_name like 'physical read%' or stat_name like 'physical write%'
  or stat_name like 'sorts%')
  and b.snap_id = &&2 and e.snap_id = &&3
union all
select 'OS/'||stat_name, i.instance_name
  , round((e.value - b.value)/100) stat_value
  , NULL total_waits
from (dba_hist_osstat e join gv$instance i using (instance_number))
  left join dba_hist_osstat b using (dbid, instance_number, stat_name)
where --1<>1 and
  stat_name in ('BUSY_TIME', 'IDLE_TIME', 'IOWAIT_TIME', 'RSRC_MGR_CPU_WAIT_TIME'
               ,'SYS_TIME', 'USER_TIME')
  and b.snap_id = &&2 and e.snap_id = &&3
union all
select 'TIME/'||stat_name, i.instance_name
  , round((e.value - b.value)/1000000) stat_value
  , NULL total_waits
from (dba_hist_sys_time_model e join gv$instance i using (instance_number))
  left join dba_hist_sys_time_model b using (dbid, instance_number, stat_name)
where --1<>1 and
  stat_name not in ('Java execution elapsed time', 'PL/SQL compilation elapsed time'
                   ,'RMAN cpu time (backup/restore)', 'connection management call elapsed time'
                   ,'failed parse (out of shared memory) elapsed time'
                   ,'failed parse elapsed time', 'hard parse (bind mismatch) elapsed time'
                   ,'hard parse (sharing criteria) elapsed time'
                   ,'hard parse elapsed time', 'inbound PL/SQL rpc elapsed time'
                   ,'parse time elapsed','repeated bind elapsed time'
                   ,'sequence load elapsed time')
   and b.snap_id = &&2 and e.snap_id = &&3
/* Q END */)
select '/'||stat_name||'/'||instance_name fqname
  , case
    when total_waits is null then to_char(stat_value, '99G999G999G999')
    else to_char(stat_value, '99G999G999G999')||' s'||to_char(stat_value/total_waits*1000, '99G999')||' ms avg'
    end info
from q
where
  upper('/'||stat_name||'/'||instance_name)
  like upper('%/&&1%')
order by 1
;
-- <---------------------------------------------------------------------------
-- Description  : DB objects description
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

set long 9999
column dsc format a999 wrapped

begin
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'SQLTERMINATOR',TRUE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'SEGMENT_ATTRIBUTES',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'TABLESPACE',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'STORAGE',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'FORCE',FALSE);
end;
/

with q as
(/* QLSX */
select o.owner, o.object_type, o.object_name
  , null num_rows
from all_objects o
order by o.owner, o.object_type, o.object_name
/* QEND */)
select upper('/'||owner||'/'||object_type||'/'||object_name) fqname
  , num_rows info
  , dbms_metadata.get_ddl(object_type, object_name, owner) dsc
from q
where
  upper('/'||owner||'/'||object_type||'/'||object_name)
  like upper('%/&&1%')
  and rownum <= decode(&&3,0,rownum,&&3);

set long 80
-- Description  : DB schema size
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

column total heading 'Total' format a20
column tablespace_name heading 'Tablespace' format a20
column data_size heading 'Data|[MB]' format 99,999,999
column index_size heading 'Index|[MB]' format 99,999,999
column lob_size heading 'LOB|[MB]' format 99,999,999
column other_size heading 'Other|[MB]' format 99,999,999

break on total skip 1 on tablespace_name skip 0
compute sum label Total of data_size index_size lob_size other_size on total skip 1

with segments as
  (select owner, tablespace_name, segment_name,
    sum(decode(segment_type, 'TABLE', bytes, 'TABLE PARTITION', bytes, 'TABLE SUBPARTITION', bytes, 0))/1024/1024 data_size,
    sum(decode(segment_type, 'INDEX', bytes, 'INDEX PARTITION', bytes, 'INDEX SUBPARTITION', bytes, 0))/1024/1024 index_size,
    sum(decode(segment_type, 'LOBSEGMENT', bytes, 'LOBINDEX', bytes, 0))/1024/1024 lob_size,
    sum(decode(segment_type, 'TABLE', 0, 'INDEX', 0, 'LOBSEGMENT', 0, 'LOBINDEX', 0,
               'TABLE PARTITION', 0, 'TABLE SUBPARTITION', 0, 'INDEX PARTITION', 0, 'INDEX SUBPARTITION', 0, 
               bytes))/1024/1024 other_size
  from dba_segments@sacp
  where owner='SAC_SO'
  and segment_name not like 'BIN$%'
  group by owner, tablespace_name, segment_name)
select 'ALL' total, replace(replace(tablespace_name,'_D',''),'_I','') tablespace_name,
  sum(data_size) data_size, sum(index_size) index_size, sum(lob_size) lob_size, sum(other_size) other_size
from segments
group by owner, replace(replace(tablespace_name,'_D',''),'_I','')
union all
select decode(c.scenario_code,null,'S_EXCL_NONREP','S_EXCL_'||c.scenario_code) total, replace(replace(tablespace_name,'_D',''),'_I','') tablespace_name,
  sum(s.data_size) data_size, sum(si.index_size) index_size, sum(s.lob_size) lob_size, sum(s.other_size) other_size
from segments s join dba_synonyms@sacp y on y.table_name = s.segment_name and y.owner = 'PUBLIC' and y.table_owner = 'SAC_SO'
  join sac_table t on t.table_name = y.synonym_name left outer join sac_table_scenario c on c.table_id = t.table_id
  left outer join 
    (select i.table_name, i.table_owner, sum(index_size) index_size 
     from dba_indexes@sacp i join segments ssi on ssi.segment_name = i.index_name and ssi.owner = i.owner
     group by i.table_name, i.table_owner) si
     on si.table_name = s.segment_name and si.table_owner = s.owner
where (c.scenario_code in ('FRR','EXCLFRR') or t.table_name like '%H' and c.scenario_code = 'HIS' or c.scenario_code is null)
group by c.scenario_code, replace(replace(tablespace_name,'_D',''),'_I','')
union all
select 'S_NONEXCL_'||c.scenario_code total, replace(replace(tablespace_name,'_D',''),'_I','') tablespace_name,
  sum(s.data_size) data_size, sum(si.index_size) index_size, sum(s.lob_size) lob_size, sum(s.other_size) other_size
from segments s join dba_synonyms@sacp y on y.table_name = s.segment_name and y.owner = 'PUBLIC' and y.table_owner = 'SAC_SO'
  join sac_table t on t.table_name = y.synonym_name join sac_table_scenario c on c.table_id = t.table_id
  left outer join 
    (select i.table_name, i.table_owner, sum(index_size) index_size 
     from dba_indexes@sacp i join segments ssi on ssi.segment_name = i.index_name and ssi.owner = i.owner
     group by i.table_name, i.table_owner) si
     on si.table_name = s.segment_name and si.table_owner = s.owner
where c.scenario_code in ('GEN','HIS','DSS','AVS')
group by c.scenario_code, replace(replace(tablespace_name,'_D',''),'_I','')
order by 1, 2;

clear computes
clear breaks
clear columns
-- <-----------------------------------------------------------------------------------------------
-- Description  : DB jobs - DB schedule jobs listing
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q JOBS */
select owner, job_name, j.job_subname, j.job_type, j.job_action, j.state, j.next_run_date
  , n.recipient, n.event, n.event_flag
from dba_scheduler_jobs&&2 j
  left outer join dba_scheduler_notifications&&2 n using (owner, job_name)
/* Q END */)
select upper('/'||owner||'/'||job_name||'/'||job_subname) fqname
  , state||', NEXT: '||to_char(next_run_date, 'YYYY-MM-DD HH24:MI') info
  , job_type||': '||job_action||chr(10)
    ||'NOTIFICATION: '||recipient||': '
    ||listagg(event, ', ') within group (order by event_flag) dsc
from q
where
  upper('/'||owner||'/'||job_name||'/'||job_subname)
  like upper('%/&&1%')
group by owner, job_name, job_subname, job_type, job_action, state, next_run_date, recipient
order by 1
;
-- Description  : DB sessions with kill seesion statements
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q KILL */
select s.service_name, i.instance_name, decode(s.server, 'DEDICATED', s.server, 'SHARED') server
  , s.username, s.osuser, s.machine, s.program, s.status
  , s.sid, s.serial#
from gv$session&&2 s
  join gv$instance&&2 i
    on i.instance_number = s.inst_id
where s.username is not NULL and s.program not like 'oracle%' and s.program not like 'emagent%'
  and rownum <= decode(&&3,0,rownum,&&3)
order by s.service_name, i.instance_name, s.username, s.osuser, s.machine, s.program, s.status
/* Q END */)
select '-- '||upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status) fqname
  , '' info
  , 'alter system kill session '''||sid||', '||serial#||''';' dsc
from q
where
  upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status)
  like upper('%/&&1%')
order by 1
;
-- ------------------------------------------------------------------------------------------------
-- Description  : DB sessions with kill seesion statements (11g version with instance number)
-- ------------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q KILL */
select s.service_name, i.instance_name, i.instance_number
  , decode(s.server, 'DEDICATED', s.server, 'SHARED') server
  , s.username, s.osuser, s.machine, s.program, s.status
  , s.sid, s.serial#
from gv$session&&2 s
  join gv$instance&&2 i
    on i.instance_number = s.inst_id
where s.username is not NULL and s.program not like 'oracle%' and s.program not like 'emagent%'
  and rownum <= decode(&&3,0,rownum,&&3)
order by s.service_name, i.instance_name, s.username, s.osuser, s.machine, s.program, s.status
/* Q END */)
select '-- '||upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status) fqname
  , '' info
  , 'alter system kill session '''||sid||', '||serial#||', @'||instance_number||''';' dsc
from q
where
  upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status)
  like upper('%/&&1%')
order by 1
;
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qldb.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB information
-- Requirements : Access to the dba views, access to v_$database, v_$parameter
--                v_$log, v_$logfile, v_$controlfile, v_$sysstat
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qldb.sql 74 2009-04-08 22:52:11Z dowczarek $

column db_name heading 'Database' format a20 truncate
column created heading 'Created'
column log_mode heading 'Log Mode'
column platform_name heading 'Platform Name' format a50

column parameter_name heading 'Parameter' format a30
column isdefault heading 'Dflt' format a5
column value heading 'Value' format a200

column tablespace_name heading 'Tablespace' format a20 truncate
column online_status heading 'Online' format a7 truncate
column block_size heading 'Blk|[kB]' format 999
column total heading 'Total|[MB]'
column used heading 'Used|[MB]'
column free heading 'Free|[MB]'
column pct_free heading 'Free|[%]' format 999
column max_free heading 'Max Extent|[MB]'
column mark heading 'M'

column file_name heading 'File Name' format a50
column status heading 'Status'

column buffer_hit_ratio heading 'Buffer Hit|[%]' format 999

select name db_name, to_char(created,'dd.mm.rrrr') created, log_mode, platform_name
from sys.v_$database@&&dba_db;

select isdefault, name parameter_name, value 
from sys.v_$parameter@&&dba_db
where name in ('db_block_buffers','shared_pool_size','java_pool_size','log_buffer'
              ,'db_file_multiblock_read_count','audit_trail','timed_statistics'
              ,'log_archive_start'
              ,'sort_area_size','hash_area_size','hash_join_enabled'
              ,'cursor_sharing')
or isdefault='FALSE' 
order by isdefault desc, name;

select d.tablespace_name, d.online_status, d.block_size
   ,round(d.bytes/1024/1024) total
   ,round((d.bytes-f.bytes)/1024/1024,2) used
   ,round(f.bytes/1024/1024,2) free
   ,round(f.bytes/d.bytes*100) pct_free
   ,round(f.max_bytes/1024/1024,2) max_free
   ,decode(round(f.bytes/d.bytes*100/6),0,'!',NULL) mark
from (select tablespace_name, online_status, sum(bytes) bytes, round(sum(bytes)/sum(blocks)/1024) block_size
      from sys.dba_data_files@&&dba_db
      group by tablespace_name, online_status) d
    ,(select tablespace_name, sum(bytes) bytes, max(bytes) max_bytes
      from sys.dba_free_space@&&dba_db
      group by tablespace_name) f
where d.tablespace_name = f.tablespace_name
order by tablespace_name;

break on tablespace_name skip 0

select d.tablespace_name, d.file_name, d.status
   ,round(d.bytes/1024/1024) total
   ,round((d.bytes-f.bytes)/1024/1024,2) used
   ,round(f.bytes/1024/1024,2) free
   ,round(f.bytes/d.bytes*100) pct_free
from (select tablespace_name, file_name, file_id, status, sum(bytes) bytes
      from sys.dba_data_files@&&dba_db
      group by tablespace_name, file_name, file_id, status
      union all
      select tablespace_name, file_name, file_id, status, sum(bytes) bytes
      from sys.dba_temp_files@&&dba_db
      group by tablespace_name, file_name, file_id, status) d
    ,(select tablespace_name, file_id, sum(bytes) bytes
      from sys.dba_free_space@&&dba_db
      group by tablespace_name, file_id) f
where d.file_id = f.file_id
order by tablespace_name, file_name;

select l.group#, f.member file_name, l.status, l.archived, l.bytes/1024/1024 total
from sys.v_$log@&&dba_db l, sys.v_$logfile@&&dba_db f
where f.group# = l.group#
order by l.group#, f.member;

select name file_name, round(block_size*file_size_blks/1024/1024) total
from sys.v_$controlfile@&&dba_db
order by name;

select round((1-(sum(decode(name,'physical reads',value,0))
                /(sum(decode(name,'db block gets',value,0))
                 +sum(decode(name,'consistent gets',value,0)))))*100) buffer_hit_ratio
from sys.v_$sysstat@&&dba_db;

SELECT *
FROM v$system_event
WHERE Event in ('buffer busy waits', 'db file parallel write')
or event like '%undo%';

clear breaks
clear columns

-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qlddl.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB object source (Oracle9 version)
-- Requirements : Access to dbms_metadata and the all views
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qlddl.sql 74 2009-04-08 22:52:11Z dowczarek $

set heading off
set long 99999
column source format a999

begin
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'SQLTERMINATOR',TRUE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'SEGMENT_ATTRIBUTES',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'TABLESPACE',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'STORAGE',FALSE);
   dbms_metadata.set_transform_param(dbms_metadata.session_transform, 'FORCE',FALSE);
end;
/

select dbms_metadata.get_ddl(o.object_type,o.object_name,o.owner) source
from all_objects o
,(select substr(',&&dba_obj'||',',instr(',&&dba_obj'||',',',',1,rownum)+1
                                 ,instr(',&&dba_obj'||',',',',1,rownum+1)
                                 -instr(',&&dba_obj'||',',',',1,rownum)-1) token
  from all_catalog where rownum <= length('&&dba_obj')-length(replace('&&dba_obj',','))+1) pattern
where ('&&dba_schema' is null or o.owner = upper('&&dba_schema'))
and o.object_name like upper(pattern.token)
and ('&&dba_obj_type' is null
    or instr(upper('&&dba_obj_type')
            ,decode(o.object_type
                   ,'INDEX','I'
                   ,'TABLE','T'
                   ,'CLUSTER','C'
                   ,'VIEW','V'
                   ,'SYNONYM','S'
                   ,'SEQUENCE','Q'
                   ,'PROCEDURE','P'
                   ,'FUNCTION','F'
                   ,'PACKAGE','D'
                   ,'PACKAGE BODY','B'
                   ,'TRIGGER','G'
                   ,'TYPE','Y'
                   ,'TYPE BODY','Y'
                   ,'TABLE PARTITION','R'
                   ,'INDEX PARTITION','R'
                   ,'LOB','O'
                   ,'LIBRARY','A'
                   ,'DIRECTORY','E'
                   ,'TABLE SUBPARTITION','R'
                   ,'INDEX SUBPARTITION','R'
                   ,'LOB PARTITION','R'
                   ,'LOB SUBPARTITION','R'
                   ,'MATERIALIZED VIEW','V'
                   ,'CONTEXT','X'
                   ,'DATABASE LINK','L')) > 0);

column source clear

set heading on
set long 80

-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qldg.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB - Logical Data Guard health
-- Requirements : Access to v$logstdby* and the dba views
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qldg.sql 74 2009-04-08 22:52:11Z dowczarek $

define db1=SACI1
define db2=SACI2

define db1=SACP1
define db2=SACP2

define db1=SACC1
define db2=SACC2

column force_logging heading 'Force|Logging'
column flashback_on heading 'Flash'
column fs_failover_status heading 'Fail|Start'
column current_scn format 999,999,999,999,999
column applied_scn format 999,999,999,999,999
column latest_scn format 999,999,999,999,999
column mining_scn format 999,999,999,999,999

break on log_mode on force_logging on flashback_on on remote_archive on dataguard_broker on protection_mode on fs_failover_status
compute sum of current_scn on log_mode

/* QDBDG */ select name, database_role, -current_scn current_scn, log_mode, force_logging, flashback_on, remote_archive
, dataguard_broker, protection_mode, fs_failover_status
from v$database@&&db1
union all
select name, database_role, current_scn, log_mode, force_logging, flashback_on, remote_archive
, dataguard_broker, protection_mode, fs_failover_status
from v$database@&&db2;

select latest_scn, mining_scn, latest_scn-mining_scn mining_delta
   , applied_scn, latest_scn-applied_scn applied_delta
from v$logstdby_progress@&&db2;
select to_char(latest_time,'DD HH24:MI:SS') latest_time
   , to_char(mining_time,'DD HH24:MI:SS') mining_time
   , (latest_time-mining_time)*24*60 mining_delta_minutes
   , to_char(applied_time,'DD HH24:MI:SS') applied_time
   , (latest_time-applied_time)*24*60 applied_delta_minutes
from v$logstdby_progress@&&db2;

break on last_update on inst_id on sid on serial# on opname on remaining on username skip 1

clear computes
clear breaks
clear columns

-- Description  : DB objects list
-- Parameters   : 1 - script name
--                2 - fully qualified name like (/OBJECT_TYPE/SCHEMA/NAME)
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q LS */
select /*+ DRIVING_SITE(o) */ o.owner, o.object_type, o.object_name, o.status
  , NULL subobject_name, NULL subobject_name2
from dba_objects&&2 o
where o.object_type in
  ('TABLE'
  ,'CLUSTER'
  ,'VIEW'
  ,'SYNONYM'
  ,'SEQUENCE'
  ,'PROCEDURE'
  ,'FUNCTION'
  ,'PACKAGE'
  ,'PACKAGE BODY'
  ,'TRIGGER'
  ,'TYPE'
  ,'TYPE BODY'
  ,'LOB'
  ,'LIBRARY'
  ,'DIRECTORY'
  ,'LOB PARTITION'
  ,'LOB SUBPARTITION'
  ,'MATERIALIZED VIEW'
  ,'CONTEXT'
  ,'DATABASE LINK')
union all
select /*+ DRIVING_SITE(i) */ i.owner, 'INDEX' object_type, i.table_name object_name
  , i.status, i.index_name subobject_name, NULL subobject_name2
from dba_indexes&&2 i
union all
select /*+ DRIVING_SITE(p) */ p.table_owner, 'TABLE PARTITION' object_type
  , p.table_name object_name
  , '' status, p.partition_name subobject_name, NULL subobject_name2
from dba_tab_partitions&&2 p
union all
select /*+ DRIVING_SITE(i) */ i.table_owner, 'INDEX PARTITION' object_type
  , i.table_name object_name
  , p.status, i.index_name subobject_name, p.partition_name subobject_name2
from dba_indexes&&2 i join dba_ind_partitions&&2 p
  on p.index_name = i.index_name and p.index_owner = i.owner
union all
select /*+ DRIVING_SITE(s) */ s.table_owner, 'TABLE SUBPARTITION' object_type
  , s.table_name object_name
  , 'N/A' status, s.subpartition_name subobject_name, NULL subobject_name2
from dba_tab_subpartitions&&2 s
union all
select /*+ DRIVING_SITE(i) */ i.table_owner, 'INDEX SUBPARTITION' object_type
  , i.table_name object_name
  , s.status, i.index_name subobject_name, s.subpartition_name subobject_name2
from dba_indexes&&2 i join dba_ind_subpartitions&&2 s
  on s.index_name = i.index_name and s.index_owner = i.owner
/* QEND */)
select upper('/'||case when subobject_name is NULL then object_type else 'TABLE' end
            ||'/'||owner||'/'||object_name
            ||case when subobject_name is NULL then NULL else '/'||subobject_name end
            ||case when subobject_name2 is NULL then NULL else '/'||subobject_name2 end) fqname
  , status info
--  , '' dsc
from q
where
  upper('/'||case when subobject_name is NULL then object_type else 'TABLE' end
        ||'/'||owner||'/'||object_name
        ||case when subobject_name is NULL then NULL else '/'||subobject_name end
        ||case when subobject_name2 is NULL then NULL else '/'||subobject_name2 end)
  like upper('%/&&1%')
order by 1
;
-- Description  : DB privileges list
-- Parameters   : 1 - script name
--                2 - fully qualified name like (/OBJECT_TYPE/SCHEMA/NAME)
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q LSG */
select /*+ DRIVING_SITE(p) */ p.grantee, p.privilege, p.owner, p.table_name object_name
from dba_tab_privs&&2 p
union all
select /*+ DRIVING_SITE(p) */ p.grantee, p.granted_role privilege, 'ROLE' owner, '' object_name
from dba_role_privs&&2 p
union all
select /*+ DRIVING_SITE(p) */ p.grantee, p.privilege, 'SYS' owner, '' object_name
from dba_sys_privs&&2 p
/* Q END */)
select
  '/'||grantee||'/'||privilege||'/'||owner
  ||case when object_name is NULL then NULL else '/'||object_name end fqname
from q
where
  '/'||grantee||'/'||privilege||'/'||owner
  ||case when object_name is NULL then NULL else '/'||object_name end
  like upper('%/&&1%')
order by 1
;
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qman.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : AnyDBA Script Tool script listing
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qman.sql 74 2009-04-08 22:52:11Z dowczarek $

prompt
prompt *************************************************************************
prompt ** WWW.DBA.BIZ.PL - qinfo
prompt *************************************************************************
prompt *  qdb        - parameters for "db" scripts
prompt *  qdbinfo    - DB information
prompt *  qdbo       - DB objects list
prompt *  qdbfk      - DB foreign keys list
prompt *  qdbcol     - DB objects containing column
prompt *  qdbjob     - DB jobs list
prompt *  qdbcom     - DB invalid object recompilation
prompt *  qdbvpd     - DB VPD strategies list
prompt *  qdbpriv    - DB privileges list
prompt *  qdbses     - DB sessions list
prompt *  qdbdg      - DB Logical Data Guard health
prompt *  qdbsrc     - source of DB views/triggers/procedures/functions/packages
prompt *  qdblock    - DB locks list
prompt *  qdf        - DB schema size
prompt *************************************************************************
prompt *  qdu        - DB object size
prompt *  qobj       - parameters for "obj" scripts
prompt *  qobjfrom   - object references
prompt *  qobjto     - objects referencing
prompt *************************************************************************
prompt *  qobj       - parameters for "tab" scripts
prompt *  qtabinfo   - informacje o tablicy
prompt *************************************************************************
prompt *  qdb        - parameters for other scripts
prompt *  qctx       - context attributes list
prompt *  qdbsql     - current running statements
prompt *  qdrop      - object drop statements
prompt *  qaud       - object audit statements
prompt *  qnoaud     - object noaudit statements
prompt *************************************************************************
prompt *  qsql       - parameters for "sql" scripts
prompt *  qsqlcreate - sample objects creation scripts
prompt *  qsqlpseudo - SQL pseudocolumns
prompt *  qsqlnull   - SQL NULL using samples
prompt *************************************************************************
prompt
-- <-----------------------------------------------------------------------------------------------
-- Description  : DB sessions - inactive/active with longops info
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q PS */
select s.service_name, i.instance_name, decode(s.server, 'DEDICATED', s.server, 'SHARED') server
  , s.username, s.osuser, s.machine, s.program, s.status, s.state, s.event
  , s.sid, s.serial#
  , t.sql_id, t.sql_text, sl.opname, sl.time_remaining, sl.elapsed_seconds, sl.sofar, sl.totalwork
from gv$session&&2 s
  join gv$instance&&2 i
    on i.instance_number = s.inst_id
  left join gv$sqlarea&&2 t
    on t.sql_id = s.sql_id and t.address = s.sql_address and t.hash_value = s.sql_hash_value and t.inst_id = s.inst_id
  left join gv$session_longops&&2 sl
    on sl.sid = s.sid and sl.serial# = s.serial# and sl.inst_id = s.inst_id
       and sl.sofar != sl.totalwork
where s.username is not NULL and s.program not like 'oracle%' and s.program not like 'emagent%'
  and t.sql_text not like '%/* Q PS */%'
order by case when opname is not null then 2 when status = 'ACTIVE' then 1 else 0 end
  , s.service_name, i.instance_name, s.username, s.osuser, s.machine, s.program, s.status
/* Q END */)
select upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status) fqname
  , 'SID, SERIAL: '||sid||', '||serial# info
  , 'SQL ID: '||sql_id||', STATE: '||case state when 'WAITING' then 'WAITING' else 'CPU' end
    ||', EVENT: '||case state when 'WAITING' then event else 'cpu / run queue' end||chr(10)
    ||case
      when status = 'ACTIVE' and opname is null then
        sql_text
      when status = 'ACTIVE' and opname is not null then
        opname||': '
        ||round(time_remaining/60)||':'||mod(time_remaining,60)||' remaining'
        ||', '||round(elapsed_seconds/60)||':'||mod(elapsed_seconds,60)||' elapsed'
        ||decode(totalwork, 0, '', ', '||round(sofar/totalwork*100, 2)||' % done')
        ||chr(10)||sql_text
      else
        null
    end dsc
from q
where
  upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status)
  like upper('%/&&1%')
  and status = 'ACTIVE'
union all
select upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status) fqname
  , 'COUNT: '||count(*) info
  , null dsc
from q
where
  upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status)
  like upper('%/&&1%')
  and status != 'ACTIVE'
group by upper('/'||service_name||'/'||server||'/'||instance_name||'/'||username||'/'||osuser||'/'||machine
  ||'/'||substr(program, 1, instr(translate(program, '@ ', '@@'), '@')-1)||'/'||status)
order by 1
;
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qrm.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : Generate drop statements for objects
-- Requirements : Access to the all views
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qrm.sql 74 2009-04-08 22:52:11Z dowczarek $

set heading off

select 'drop '||o.object_type||' '||o.owner||'.'||o.object_name||';'
from all_objects@&&dba_db o
,(select substr(',&&dba_schema'||',',instr(',&&dba_schema'||',',',',1,rownum)+1
                                    ,instr(',&&dba_schema'||',',',',1,rownum+1)
                                    -instr(',&&dba_schema'||',',',',1,rownum)-1) token_schema
  from all_catalog where rownum <= length('&&dba_schema')-length(replace('&&dba_schema',','))+1) pattern_schema
,(select substr(',&&dba_obj'||',',instr(',&&dba_obj'||',',',',1,rownum)+1
                                 ,instr(',&&dba_obj'||',',',',1,rownum+1)
                                 -instr(',&&dba_obj'||',',',',1,rownum)-1) token_obj
  from all_catalog where rownum <= length('&&dba_obj')-length(replace('&&dba_obj',','))+1) pattern_obj
where o.owner like upper(pattern_schema.token_schema)
and o.object_name like upper(pattern_obj.token_obj)
and ('&&dba_obj_type' is null
    or instr(upper('&&dba_obj_type')
            ,decode(o.object_type
                   ,'INDEX','I'
                   ,'TABLE','T'
                   ,'CLUSTER','C'
                   ,'VIEW','V'
                   ,'SYNONYM','S'
                   ,'SEQUENCE','Q'
                   ,'PROCEDURE','P'
                   ,'FUNCTION','F'
                   ,'PACKAGE','D'
                   ,'PACKAGE BODY','B'
                   ,'TRIGGER','G'
                   ,'TYPE','Y'
                   ,'TYPE BODY','Y'
                   ,'TABLE PARTITION','R'
                   ,'INDEX PARTITION','R'
                   ,'LOB','O'
                   ,'LIBRARY','A'
                   ,'DIRECTORY','E'
                   ,'TABLE SUBPARTITION','R'
                   ,'INDEX SUBPARTITION','R'
                   ,'LOB PARTITION','R'
                   ,'LOB SUBPARTITION','R'
                   ,'MATERIALIZED VIEW','V'
                   ,'CONTEXT','X'
                   ,'DATABASE LINK','L')) > 0)
order by o.object_type, o.owner||'.'||object_name;

set heading on

-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qsar.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB AWR (Workload Repository) statistics
-- Requirements : Access to the dba views
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qsar.sql 74 2009-04-08 22:52:11Z dowczarek $

column db_name heading 'Database' format a20 truncate
column created heading 'Created'
column log_mode heading 'Log Mode'
column total heading 'Total|[MB]'
column pct_free heading 'Free|[%]' format 999

select s.service_name, to_char(service_name_hash)
from dba_hist_service_name s, v$database d
where d.dbid=s.dbid
order by s.service_name;

select min(snap_id) from dba_hist_service_stat
where dbid=1978991893;
dba_hist_service_wait_class


select SNAP_ID, DBID, INSTANCE_NUMBER, STARTUP_TIME, BEGIN_INTERVAL_TIME
from DBA_HIST_SNAPSHOT where rownum < 100

select * from DBA_HIST_STAT_NAME
DBID
STAT_ID
STAT_NAME

select min(snap_id), max(snap_id)
from DBA_HIST_SNAPSHOT@SACP1
where dbid=1978991893;

select /*+ DRIVING_SITE(s) */ to_number(to_char(end_interval_time,'YYYYMMDDHH24MI')||'00') time_id,
m.metric_id, decode(d.database_role,'PRIMARY',9,'LOGICAL STANDBY',21) database_id,
s.instance_number, s.service_name_hash object_id,
trunc(end_interval_time) day_date, to_number(to_char(end_interval_time,'HH24MI')||'00') time,
s.value
from dba_hist_service_stat@sacp1 s, dba_hist_snapshot@sacp1 t, v$database@sacp1 d, metric_dim m
where t.snap_id = s.snap_id and t.dbid=s.dbid and t.instance_number=s.instance_number
and s.stat_name=m.metric_name and m.category='Oracle' and m.metric_type='Instance Activity Stats'
and t.end_interval_time between trunc(sysdate)-7 and sysdate;

select distinct to_char(DBID), INSTANCE_NUMBER,
min(BEGIN_INTERVAL_TIME), max(trunc(end_interval_time)), to_char(to_number(to_char(max(end_interval_time),'YYYYMMDDHH24MI'))),
max(snap_id),
to_char(max(to_number(to_char(end_interval_time,'YYYYMMDDHH24MI'))))
from DBA_HIST_SNAPSHOT@SACP1
group by DBID, INSTANCE_NUMBER
order by 1, 2;
1978991893                                             1 07/11/19 22:00:15,583                                               07/12/20 04:40:22,374
1978991893                                             2 07/11/19 22:00:15,579                                               07/12/20 04:40:22,329
1978991893                                             3 07/11/19 22:00:15,523                                               07/12/20 04:40:22,271


break on tablespace_name skip 0

clear breaks
clear columns

-- <-----------------------------------------------------------------------------------------------
-- Description  : DB queries with search on sql_text (not sql_fulltext)
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q SQL */
select s.service, i.instance_name, ss.parsing_schema_name, ss.module
  , ss.sql_profile, s.child_number
  , s.sql_id
  , ss.last_active_time, s.fetches, s.executions, s.first_load_time
  , s.rows_processed, s.cpu_time, s.elapsed_time, s.buffer_gets, s.disk_reads, s.sorts 
  , s.loads, s.invalidations
  --, s.is_bind_sensitive, s.is_bind_aware
  , s.sql_text
from gv$sql&&2 s
  join gv$instance&&2 i
    on i.instance_number = s.inst_id
  join gv$sqlarea&&2 ss
    on ss.inst_id = s.inst_id and ss.sql_id = s.sql_id
order by s.service, i.instance_name, ss.parsing_schema_name, ss.module, ss.action
  , ss.sql_profile, s.child_number
/* Q END */)
select upper('/'||service||'/'||instance_name||'/'||parsing_schema_name
             ||'/'||module||'/'||sql_profile||'/'||child_number) fqname
  , 'SQL_ID: '||sql_id info
  , 'FETCHES: '||fetches||', EXECS: '||executions
    ||', ROWS_PER_FETCH: '||rows_processed/nullif(fetches,0)
	  ||', CPU_MS: '||round(cpu_time/1000)||', ELAPSED_MS: '||round(elapsed_time/1000)
	  ||', BUFFER_GETS: ' ||buffer_gets||' DISK_READS: '||disk_reads
	  ||', SORTS: '||sorts||chr(10)
    ||'FIRST_LOAD: '||first_load_time
    ||', LAST ACTIVE: '||to_char(last_active_time, 'yyyy-mm-dd/hh24:mi:ss')
    ||', LOADS: '||loads||', INVALIDATIONS; '||invalidations
    --||chr(10)||'BIND SENS./AWARE: '||is_bind_sensitive||'/'||is_bind_aware
    ||chr(10)||sql_text dsc
from q
where
  sql_text like '%&&1%' and sql_text not like '%/* Q % */%' and sql_text not like '%/* Q */%'
  and rownum <= decode(&&3,0,rownum,&&3)
;
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qps.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB queries with search on sql_text (not sql_fulltext)
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qps.sql 69 2009-02-23 20:57:55Z dowczarek $

with q as
(/* QSQL */
select i.instance_name, ss.module
  , s.child_number
  , s.fetches, s.executions, s.first_load_time
  , s.loads, s.invalidations, ss.rows_processed
  --, s.is_bind_sensitive, s.is_bind_aware
  , s.sql_text
from gv$sql&&2 s
  join gv$instance&&2 i
    on i.instance_number = s.inst_id
  join gv$sqlarea&&2 ss
    on ss.inst_id = s.inst_id and ss.address = s.address
order by i.instance_name, ss.module, ss.action
  , s.child_number
/* QEND */)
select upper('/'||instance_name
             ||'/'||module||'/'||child_number) fqname
  , 'FETCHES: '||fetches||', EXECS: '||executions||', ROWS: '||rows_processed
    ||', FIRST_LOAD: '||first_load_time
    ||', LOADS: '||loads||', INVALIDATIONS; '||invalidations
    --||chr(10)||'BIND SENS./AWARE: '||is_bind_sensitive||'/'||is_bind_aware
    ||chr(10)||sql_text dsc
from q
where
  sql_text like '%&&1%' and sql_text not like '%/* Q% */%' and sql_text not like '%/* Q */%'
  --first_load_time between to_timestamp('2009-10-08/10:12:00','yyyy-mm-dd/hh24:mi:ss') and to_timestamp('2009-10-08/10:15:00','yyyy-mm-dd/hh24:mi:ss')
  and rownum <= decode(&&3,0,rownum,&&3)
order by first_load_time
;
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qps.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : Bind values for the particular query
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qps.sql 69 2009-02-23 20:57:55Z dowczarek $

with q as
(/* QSQLB */
select i.instance_name, b.sql_id, b.child_number, b.position
  , b.last_captured
  , b.name, b.datatype_string, b.value_string, b.value_anydata
from gv$sql_bind_capture&&2 b
  join gv$instance&&2 i
    on i.instance_number = b.inst_id
where sql_id = '&&1'
order by i.instance_name, b.sql_id, b.child_number, b.position
/* QEND */)
select upper('/'||instance_name||'/'||child_number) fqname
  , 'CAPTURED: '||to_char(max(last_captured), 'yyyy-mm-dd/hh24:mi:ss') info
  , max(substr(sys_connect_by_path(
      name||'='||case
      when datatype_string = 'NUMBER' then to_char(anydata.accessnumber(value_anydata))||'(NUMBER)'
      when datatype_string = 'DATE' then to_char(anydata.accessdate(value_anydata))||'(DATE)'
      when datatype_string = 'TIMESTAMP' then to_char(anydata.accesstimestamp(value_anydata))||'(TIEMSTAMPT)'
      when datatype_string = 'TIMESTAMP (TZ)' then to_char(anydata.accesstimestamptz(value_anydata))||'(TIEMSTAMPT TZ)'
      else value_string
      end
      ,', '),3)) dsc
from q
where rownum <= decode(&&3,0,rownum,&&3)
  and connect_by_isleaf = 1
connect by position = prior position + 1
  and instance_name = prior instance_name and sql_id = prior sql_id and child_number = prior child_number
start with position = 1
group by instance_name, sql_id, child_number
order by 1
;
-- Description  : SQL baselines
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q SQLBL */
select b.parsing_schema_name, b.module
  , b.sql_handle, b.plan_name, b.optimizer_cost
  , b.origin, b.enabled, b.accepted, b.fixed, b.autopurge
  , b.last_modified, b.last_executed, b.last_verified
  , b.sql_text
from dba_sql_plan_baselines&&2 b
order by b.parsing_schema_name, b.module
/* Q END */)
select upper('/'||parsing_schema_name||'/'||module) fqname
  , 'SQL HANDLE: '||sql_handle info
  , 'LAST ACTIVE: '||to_char(last_executed, 'yyyy-mm-dd/hh24:mi:ss')
    ||', LAST MODIFIED: '||to_char(last_modified, 'yyyy-mm-dd/hh24:mi:ss')
    ||', LAST VERIFIED: '||to_char(last_verified, 'yyyy-mm-dd/hh24:mi:ss')
    ||chr(10)||'ORIGIN: '||origin
    ||', ENA/ACC/FIX: '||enabled||'/'||accepted||'/'||fixed
    ||', AUTO PURGE: '||autopurge||', COST: '||optimizer_cost
    ||chr(10)||plan_name dsc
    --||chr(10)||sql_text dsc
from q
where (sql_handle = '&&1' or plan_name = '&&1')
  and rownum <= decode(&&3,0,rownum,&&3)
order by 1
;
-- <-----------------------------------------------------------------------------------------------
-- Description  : Execution plans for the particular query
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

/* Q SQLP */
with q as
(
select s.sql_id, s.child_number
from v$sql&&2 s
order by s.sql_id, s.child_number
)
select p.plan_table_output fqname
from q, table(dbms_xplan.display_cursor(sql_id, child_number, 'ALLSTATS LAST +PEEKED_BINDS +PARTITION')) p
where sql_id = '&&1'
order by sql_id, child_number
/* Q END */
;
-- Description  : Quality Oracle Scripts template
-- Parameters   : 1 - fully qualified name like
--              : 2 - optional: database link
--              : 3 - optional: rows limit
-- >-----------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:dariusz.owczarek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                The Quality Oracle Scripts is a free software;
--                you can redistribute it and/or adapt it under the terms
--                of the Creative Commons Attribution 3.0 Unported license.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

--column string format a9
--column number format 999G999
--column null null -=null=-

--break on c1 skip page
--compute sum count of c2 on c1

select ...
from ...
where
  regexp_like('&param', '^.a{1,2}.+$', 'i');
;

--clear computes
--clear breaks
-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qps.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : DB sessions - inactive/active with longops info
-- Parameters   : 1 - fully qualified name like
--                2 - database link
--                3 - limit
-- Requirements : Access to ... and the all views
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qps.sql 73 2009-03-07 16:34:08Z dowczarek $

select version, sysdate, '&&2'||': '||dump('&&2') from v$instance;

-- ----------------------------------------------------------------------------
-- File::      $URL: https://anydba.googlecode.com/svn/trunk/sql/qtmp.sql $
-- Author::    Dariusz Owczarek (mailto:darek@dba.biz.pl)
-- ----------------------------------------------------------------------------
-- Description  : Master script for calling all others
-- Parameters   : 1 - script name
--                2 - fully qualified name like
--                3 - database link
--                4 - limit
-- ----------------------------------------------------------------------------
-- Copyright    : Copyright (c) 2007-2009 Dariusz Owczarek. All rights reserved. 
--                This file is part of AnyDBA tool.
--                AnyDBA is free software; you can redistribute it
--                and/or modify it under the terms of the GNU General Public
--                License as published by the Free Software Foundation;
--                either version 2 of the License, or (at your option)
--                any later version.
-- ----------------------------------------------------------------------------
-- $Id: qtmp.sql 74 2009-04-08 22:52:11Z dowczarek $

define dba_version_script='NO'

set feedback off
set timing off
--disable displaying replacement of substitution variables
set verify off

set termout off

column dba_version_script new_value dba_version_script
select &dba_version_script dba_version_script from dual;
column dba_version_script clear

column dba_date new_value dba_date
column dba_script new_value dba_script
column dba_db_type new_value dba_db_type
column dba_db_version new_value dba_db_version

select to_char(sysdate,'dd.mm.yyyy hh24:mi:ss') dba_date
  , decode(upper('&&dba_db_type'),'MY','MY'
                                 ,'MS','MS'
                                 ,'ORA') dba_db_type
  , decode(upper('&&dba_db_type'),'MY',''
                                 ,'MS',''
                                 ,value) dba_db_version
  , decode('&dba_version_script','Y',decode(upper('&&dba_db_type'),'ORA','&1'||substr(value,1,instr(value,'.')-1)
                                                                ,'&1'
                                         )
                              ,'&1') dba_script
from database_compatible_level&dba_db_checkversion.;

column dba_date clear
column dba_db_type clear
column dba_script clear
column dba_db_version clear

set termout on

spool q&1..sqq

prompt -------------------------------------------------------------------------
prompt -- WWW.DBA.BIZ.PL - &1
prompt -- &&dba_db./&&dba_db_type./&&dba_db_version - &dba_date
prompt -- SCH=&&dba_schema./OBJ=&&dba_obj./TYPE=&&dba_obj_type
prompt -------------------------------------------------------------------------

@@q&dba_script..sql

prompt

spool off

undefine dba_db_version
undefine dba_db_checkversio
undefine dba_date
undefine dba_script
undefine dba_version_script
undefine dba_version_scripts

undefine 1

set feedback on
set timing on
set verify on
-- ------------------------------------------------------------------------------------------------
-- Description  : Selects <D>
-- Parameters   : 1 - fully qualified name like
--                2 - database link
--                3 - rows limit
-- Requirements : Access to dbms_metadata and the all views
-- ------------------------------------------------------------------------------------------------
-- Author       : Dariusz Owczarek (mailto:darek@edba.eu)
-- Copyright    : Copyright (c) 2007-2011 Dariusz Owczarek. All rights reserved. 
--                This file is part of Quality Oracle Scripts.
--                Quality Oracle Scripts is free software;
--                you can redistribute it and/or modify it under the terms
--                of the GNU General Public License as published
--                by the Free Software Foundation; either version 2
--                of the License, or (at your option) any later version.
-- Notes        : This software is provided "AS IS" without warranty
-- 		            of any kind, express or implied.
-- ------------------------------------------------------------------------------------------------

with q as
(/* Q TSSHRINK */
select me.tablespace_name, f.file_name,
  nvl((e.block_id + (e.bytes/8192))*8192/1024/1024, 9) mb
from dba_data_files&&2 f
  left outer join (select tablespace_name, file_id, max(block_id) max_block_id
      from dba_extents&&2 group by tablespace_name, file_id) me
  on f.tablespace_name = me.tablespace_name and f.file_id = me.file_id
  left outer join dba_extents&&2 e
  on e.tablespace_name = me.tablespace_name and e.file_id = me.file_id
  and e.block_id = me.max_block_id
where f.tablespace_name = upper('&&1')
/* Q END */)
select '-- '||upper('/'||tablespace_name||'/'||file_name) fqname
  , '' info
  , 'alter database datafile '''||file_name||''' resize '
    ||ceil(mb*1.1)||'M;' dsc
from q
order by 1
;
